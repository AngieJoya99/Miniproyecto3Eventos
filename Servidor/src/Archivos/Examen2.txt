Pregunta 1-;Opcion 1;Opcion 2;Opcion 3;Opcion 4;+Opcion 2+&
Que es la sobrecarga de metodos en Java-;a. Tener varios metodos con el mismo nombre en una clase pero con diferentes firmas.;b. Heredar metodos de una clase padre.;c. Definir metodos en una interfaz.;d. Acceder a los metodos de otra clase usando this.;+a+&
Como se logra la implementacion de la herencia multiple en Java-;a. Usando la palabra clave multiple en la declaracion de clase.;b. Java no permite la herencia multiple.;c. Implementando interfaces.;d. Declarando multiples clases como padres en la declaracion de clase.;+b+&
Cual es el proposito de la palabra clave final en Java-;a. Indica que un metodo no puede ser sobrescrito en una clase hija.;b. Indica que una variable no puede ser modificada despues de su asignacion.;c. Indica que una clase no puede ser heredada.;d. Todas las anteriores.;+d+&
Cual es la diferencia entre una clase abstracta y una interfaz en Java-;a. Una interfaz puede contener metodos con implementacion, mientras que una clase abstracta no.;b. Una clase abstracta no puede tener atributos, pero una interfaz si.;c. Una clase abstracta puede ser instanciada, pero una interfaz no.;d. Una interfaz puede heredar de multiples interfaces, mientras que una clase abstracta no puede heredar de multiples clases.;+a+&
Que es la palabra clave this en Java-;a. Hace referencia a la instancia actual de la clase.;b. Hace referencia a la instancia de la clase padre.;c. Hace referencia a la instancia de la clase hija.;d. Hace referencia a una instancia de otra clase.;+a+&
Cual es el proposito del metodo toString() en Java-;a. Convertir un objeto a una cadena de texto.;b. Convertir una cadena de texto a un objeto.;c. Comparar dos objetos para ver si son iguales.;d. Imprimir el contenido de un objeto en la consola.;+a+&
Que es la serializacion en Java-;a. Convertir un objeto en una secuencia de bytes.;b. Convertir un objeto en una cadena de texto.;c. Convertir una cadena de texto en un objeto.;d. Convertir una secuencia de bytes en un objeto.;+a+&
Cual es la diferencia entre una variable de instancia y una variable de clase en Java-;a. Una variable de instancia es estatica, mientras que una variable de clase no lo es.;b. Una variable de instancia pertenece a la clase, mientras que una variable de clase pertenece a la instancia.;c. Una variable de instancia se declara con la palabra clave static, mientras que una variable de clase no.;d. Una variable de instancia pertenece a la instancia y se declara sin la palabra clave static, mientras que una variable de clase pertenece a la clase y se declara con static.;+d+&
Que es el polimorfismo de compilacion (compile-time polymorphism) en Java-;a. La capacidad de una clase para tener multiples metodos con el mismo nombre pero con diferentes firmas.;b. La capacidad de una clase para tomar diferentes formas a traves de la herencia.;c. La capacidad de un programa para seleccionar el metodo adecuado en tiempo de ejecucion.;d. La capacidad de un compilador para seleccionar el metodo adecuado en tiempo de compilacion.;+d+&
Como se previene la herencia de una clase en Java-;a. Declarando la clase como sealed.;b. Declarando la clase como private.;c. Declarando la clase como final.;d. No es posible prevenir la herencia en Java.;+c+&
Que es el manejo de excepciones en Java-;a. Un mecanismo para evitar errores en tiempo de compilacion.;b. Un mecanismo para manejar situaciones impredecibles y errores en tiempo de ejecucion.;c. Un mecanismo para convertir excepciones en errores.;d. Un mecanismo para manejar errores en tiempo de compilacion.;+b+&
Como se crea una instancia de una interfaz en Java-;a. Utilizando el operador new.;b. No es posible crear instancias de interfaces en Java.;c. Implementando la interfaz en una clase y creando una instancia de esa clase.;d. Utilizando el metodo estatico getInstance().;+c+&
Cual es el proposito de la palabra clave super en un constructor-;a. Hace referencia a la instancia actual de la clase.;b. Invoca al constructor de la clase actual.;c. Invoca al constructor de la clase padre.;d. Hace referencia a la instancia de la clase padre.;+c+&