Pregunta 1-;Opcion 1;Opcion 2;Opcion 3;Opcion 4;+Opcion 2+}
¿Qué es la herencia en Java?-;a. Una clase puede tener múltiples padres.;b. Una clase puede heredar de una sola clase padre.;c. No es posible implementar herencia en Java.;d. Una clase no puede heredar métodos, solo atributos.;+b+}
¿Cuál es el propósito del operador super en Java?-;a. Acceder a los métodos de la clase actual.;b. Acceder a los métodos de la clase padre.;c. Crear una nueva instancia de la clase actual.;d. Acceder a los métodos de la clase hija.;+b+}
¿Qué es la interfaz en Java?-;a. Una clase abstracta con métodos con implementación.;b. Una clase que no puede tener instancias.;c. Una colección de métodos abstractos.;d. Una forma de implementar herencia múltiple en Java.;+c+}
¿Cómo se logra el encapsulamiento en Java?-;a. Declarando todos los métodos como públicos.;b. Declarando todos los métodos como privados.;c. Usando las palabras clave public, protected y private.;d. No es posible lograr encapsulamiento en Java.;+c+}
¿Cuál es la diferencia entre == y .equals() en Java?-;a. No hay diferencia, ambos se utilizan para comparar objetos.;b. == compara el contenido, mientras que .equals() compara las referencias.;c. == compara las referencias, mientras que .equals() compara el contenido.;d. == solo se utiliza con tipos primitivos, mientras que .equals() se utiliza con objetos.;+c+}
¿Qué es el polimorfismo en Java?-;a. La capacidad de una clase para heredar de múltiples clases.;b. La capacidad de una clase para tener múltiples constructores.;c. La capacidad de una clase para tomar diferentes formas a través de la herencia y la implementación de interfaces.;d. La capacidad de una clase para tener múltiples métodos con el mismo nombre.;+c+}
¿Qué es una clase abstracta en Java?-;a. Una clase que no puede tener instancias.;b. Una clase con al menos un método abstracto.;c. Una clase que no puede tener atributos.;d. Una clase que no puede ser heredada.;+b+}
¿Cuál es el propósito del operador this en Java?-;a. Acceder a los métodos de la clase actual.;b. Acceder a los métodos de la clase padre.;c. Referenciar la instancia actual de la clase.;d. Crear una nueva instancia de la clase actual.;+c+}
¿Qué es el constructor en Java?-;a. Un método que se llama automáticamente cuando se crea una instancia de la clase.;b. Un método que se llama automáticamente cuando se destruye una instancia de la clase.;c. Un método que debe ser estático.;d. Un método que solo puede ser llamado desde la misma clase.;+a+}
¿Cuál es la diferencia entre una clase y un objeto en Java?-;a. Una clase es una instancia de un objeto.;b. Una clase define un tipo de objeto, mientras que un objeto es una instancia específica de esa clase.;c. Una clase y un objeto son lo mismo en Java.;d. Una clase es más abstracta que un objeto.;+b+}